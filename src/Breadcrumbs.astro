---
import { schemaJson } from "./lib/structuredData";
import { generateCrumbs } from "./lib/generateCrumbs";

export interface BreadcrumbsProps {
  indexText?: string;
  mainBemClass?: string;
  ariaLabel?: string;
  crumbs?: Array<BreadcrumbItem>;
  schemaJsonScript?: boolean;
  baseUrl?: string;
  trailingSlash?: boolean;
}

export interface BreadcrumbItem {
  text: string;
  href: string;
  "aria-current"?: string;
}

const {
  indexText = "Home",
  mainBemClass = "c-breadcrumbs",
  ariaLabel = "breadcrumbs",
  crumbs = [],
  schemaJsonScript = true,
  baseUrl,
  trailingSlash = false,
} = Astro.props as BreadcrumbsProps;

const hasBaseUrl = !!baseUrl?.length;
const paths = Astro.url.pathname.split("/").filter((crumb: any) => crumb);
console.log(paths);

const parts = generateCrumbs(
  baseUrl,
  crumbs,
  paths,
  hasBaseUrl,
  trailingSlash,
  indexText,
);
---

<nav aria-label={ariaLabel} class={mainBemClass}>
  <ol
    class={`${mainBemClass}__crumbs${
      Astro.slots.has("separator") ? " has-separators" : " has-no-separators"
    }`}
  >
    {
      parts.map(({ text, ...attrs }, index, array) => (
        <li class={`${mainBemClass}__crumb`}>
          {Astro.slots.has("index") && index === 0 && (
            <a {...attrs} class={`${mainBemClass}__link is-index`}>
              <slot name="index" />
            </a>
          )}

          {(!Astro.slots.has("index") ||
            (Astro.slots.has("index") && index !== 0)) && (
            <a
              {...attrs}
              class={`${mainBemClass}__link${
                index + 1 === array.length ? " is-current" : ""
              }`}
              aria-current={index + 1 === array.length ? "location" : false}
            >
              {text}
            </a>
          )}

          {Astro.slots.has("separator") && array.length - 1 !== index && (
            <span class="c-breadcrumbs__separator" aria-hidden="true">
              <slot name="separator" />
            </span>
          )}
        </li>
      ))
    }
  </ol>
</nav>
{
  schemaJsonScript && (
    <script type="application/ld+json" set:html={schemaJson(parts)} />
  )
}
